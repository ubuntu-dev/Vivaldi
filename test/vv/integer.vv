require "assert"

let basic() = do
  assert(0 != 1, "0 != 1")
  assert(0.type() == Integer, "0.type() == Integer")
end

let division() = do
  for i in 0 to 1000: do
    assert(i / 1 == i, "i / 1 == i")
    if i != 0: assert(i / i == 1, "i / i == 1")
  end

  assert(10 / 2 == 5,      "10 / 2 == 5")
  assert(4 / 5 == 0,       "4 / 5 == 0")
  assert(3 / 2 == 1,       "3 / 2 == 1")
  assert(4000 / 2 == 2000, "4000 / 2 == 2000")
end

let subtraction() =
  for i in 0 to 1000: do
    assert(i - i == 0, "i - i == 0")
    assert(i - 0 == i, "i - 0 == 0")
  end

let addition() =
  for i in 0 to 1000: do
    assert(-i + i == 0, "-i + i == 0")
    assert(i + 0 == i,  "i + 0 == i")
  end

let comparison() =
  for i in 0 to 1000: do
    assert(i == i,   "i == i")
    assert(i != -1,  "i != -1")
    assert(i < 1000, "i < 1000")
    assert(i > -1,   "i > -1")
    assert(i <= i,   "i <= i")
    assert(i >= i,   "i >= i")
    assert(i >= 0,   "i >= 0")
    assert(i <= 999, "i <= 999")
  end

let multiplication() =
  for i in 0 to 1000: do
    assert(i * 1 == i,      "i * 1 == i")
    assert(i * 0 == 0,      "i * 0 == 0")
    assert(i * -1 == 0 - i, "i * -1 == 0 - i")
  end

let bitwise() =
  for i in 0 to 1000: do
    assert(i & i == i, "i & i == i")
    assert(i & 0 == 0, "i & 0 == 0")
    assert(i | i == i, "i | i == i")
    assert(i | 0 == i, "i | 0 == i")
    assert(i ^ i == 0, "i ^ i == 0")
    assert(i ^ 0 == i, "i ^ 0 == i")

    assert(i >> 1 == i / 2, "i >> 1 == i / 2")
  end

let negative_num() = assert(0 - 1 == -1, "0 - 1 == -1")

let bases() = do
  assert(18 == 0b10010, "18 == 0b10010")
  assert(55 == 0x37, "55 == 0x37")
  assert(123 == 0173, "123 == 0173")
end

section("Integers")

test(basic, "basic")
test(division, "division")
test(subtraction, "subtraction")
test(addition, "addition")
test(comparison, "comparison")
test(multiplication, "multiplication")
test(bitwise, "bitwise")
test(negative_num, "negative")
test(bases, "literals in different bases")
