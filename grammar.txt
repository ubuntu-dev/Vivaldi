<toplevel> ::= <expression>
             | <expression> <division> <toplevel>

<expression> ::= <prec13>

<nonop_expression> ::= <array_literal>
                     | <assignment>
                     | <block>
                     | <cond_statement>
                     | <except>
                     | <for_loop>
                     | <lambda>
                     | <function_definition>
                     | <literal>
                     | <new_obj>
                     | <require>
                     | <return>
                     | <try_catch>
                     | <type_definition>
                     | <variable_declaration>
                     | <variable>
                     | <member_variable>
                     | <member_variable_assignment>
                     | <while_loop>

<prec0> ::= <nonop_expression>
          | <prec0> '.' <variable>
          | <prec0> '(' <expr_list> ')'
          | <prec0> '[' <expression> ']'
          | <prec0> '->' <prec0>

<prec1> ::= <prec0>
          | '!' <prec1>
          | '~' <prec1>
          | '-' <prec1>

<prec2> ::= <prec1>
          | <prec1> '**' <prec2>

<prec3> ::= <prec2>
          | <prec2> '*' <prec3>
          | <prec2> '/' <prec3>
          | <prec2> '%' <prec3>

<prec4> ::= <prec3>
          | <prec3> '+' <prec4>
          | <prec3> '-' <prec4>

<prec5> ::= <prec4>
          | <prec4> '>>' <prec5>
          | <prec4> '<<' <prec5>

<prec6> ::= <prec5>
          | <prec5> '&' <prec6>

<prec7> ::= <prec6>
          | <prec6> '^' <prec7>

<prec8> ::= <prec7>
          | <prec7> '|' <prec8>

<prec9> ::= <prec8>
          | <prec8> 'to' <prec9>

<prec10> ::= <prec9>
           | <prec9> '>' <prec10>
           | <prec9> '<' <prec10>
           | <prec9> '>=' <prec10>
           | <prec9> '<=' <prec10>

<prec11> ::= <prec10>
           | <prec10> '==' <prec11>
           | <prec10> '!=' <prec11>

<prec12> ::= <prec11>
           | <prec11> '&&' <prec12>

<prec13> ::= <prec12>
           | <prec12> '||' <prec13>

<array_literal> ::= '[' <expr_list> ']'

<assignment> ::= <variable> '=' <expression>

<block> ::= 'do' <toplevel> 'end'

<cond_statement> ::= 'cond' <inner_cond_statement>
                   | 'if' <inner_cond_statement>

<except> ::= 'except' <expression>

<for_loop> ::= 'for' <variable> 'in' <expression> ':' <expression>

<lambda> ::= 'fn' '(' <arg_list> ')' ':' <expression>

<function_definition> ::= 'let' <variable> '(' <arg_list> ')' '=' <expression>

<arg_list> ::= ''
             | <variable>
             | '[' <variable> ']'
             | <variable> ',' <arg_list>

<literal> ::= <bool>
            | <float>
            | <integer>
            | <nil>
            | <regex>
            | <string>
            | <symbol>

<new_obj> ::= 'new' <variable> '(' <expr_list> ')'

<require> ::= 'require' <string>

<return> ::= 'return' <expression>

<try_catch> ::= 'try' ':' <expression> <division 'catch' <variable> ':' <expression>

<type_definition> ::= 'class' <name> <method_list> <end>

<name> ::= <variable>
         | <variable> ':' <variable>

<method_list> ::= ''
                | <function_definition> <method_list>

<variable_declaration> ::= 'let' <variable> '=' <expression>

<variable> ::= /[^[:punct:][:space:]\d][^[:punct:][:space:]]*/

<member_variable> ::= '@' <variable>

<member_variable_assignment> ::= <member_variable> '=' <expression>

<while_loop> ::= 'while' <expression> ':' <expression>

<symbol> ::= '\'' <variable>

<integer> ::= /[1-9]\d* /
            | /0[0-7]* /
            | /0x[[:xdigit:]]+/
            | /0b[01]+/

<float> ::= /[1-9]\d*\.\d+/
          | /0\.\d+/

<bool> ::= 'true'
         | 'false'

<nil> ::= 'nil'

<regex> ::= /`.*`/

<string> ::= /".*"/

<division> ::= '\n'
             | ';'
